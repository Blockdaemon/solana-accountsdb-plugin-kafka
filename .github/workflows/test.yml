# Source:
# https://github.com/solana-labs/solana-accountsdb-plugin-postgres/blob/master/.github/workflows/test.yml

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches:
      - 'master'
      - 'v1.17-triton'
      - 'v1.16-triton'
      - 'v1.14-triton'
      - 'v1.10-triton'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
    runs-on: ["${{ matrix.os }}"]
    steps:
      - uses: actions/checkout@v4

      - name: Set env vars
        run: |
          rust_stable=$(rustc --version | awk '{print $2}')
          echo "RUST_STABLE=$rust_stable" | tee -a $GITHUB_ENV

      - name: instal dependencies for 20.04
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gnupg \
            libudev-dev \
            libsasl2-dev \
            libssl-dev \
            libzstd-dev

      - name: install protobuff 3.12
        if: matrix.os == 'ubuntu-20.04'
        run: |
          curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v3.15.8/protoc-3.15.8-linux-x86_64.zip
          unzip protoc-3.15.8-linux-x86_64.zip -d $HOME/.local
          export PATH="$PATH:$HOME/.local/bin"

      - name: Install dependencies for 22.04
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gnupg \
            libudev-dev \
            libsasl2-dev \
            libssl-dev \
            libzstd-dev \
            protobuf-compiler

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_STABLE }}
          components: clippy

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./target
          key: cargo-${{ matrix.os }}-${{ hashFiles('rust-toolchain.toml') }}-${{ hashFiles('**/Cargo.lock') }}-0000
          restore-keys: |
            cargo-${{ matrix.os }}-${{ hashFiles('rust-toolchain.toml') }}

      - name: Run fmt
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --tests -- -Dwarnings

      - name: Build
        run: ./ci/cargo-build-test.sh
