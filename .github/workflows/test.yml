# Source:
# https://github.com/solana-labs/solana-accountsdb-plugin-postgres/blob/master/.github/workflows/test.yml

on:
  push:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
    runs-on: ["${{ matrix.os }}"]
    steps:
      - uses: actions/checkout@v2

      - name: Set env vars
        run: |
          rust_stable=$(rustc --version | awk '{print $2}')
          echo "RUST_STABLE=$rust_stable" | tee -a $GITHUB_ENV

      - name: instal dependencies for 20.04
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gnupg \
            libudev-dev \
            libsasl2-dev \
            libssl-dev \
            libzstd-dev 

      - name: install protobuff 3.12 
        if: matrix.os == 'ubuntu-20.04'
        run: |
          curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v3.15.8/protoc-3.15.8-linux-x86_64.zip
          unzip protoc-3.15.8-linux-x86_64.zip -d $HOME/.local
          export PATH="$PATH:$HOME/.local/bin"

      - name: Install dependencies for 22.04
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gnupg \
            libudev-dev \
            libsasl2-dev \
            libssl-dev \
            libzstd-dev \
            protobuf-compiler

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_STABLE }}
          override: true
          profile: minimal
          components: rustfmt, clippy

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.os }}-cargo-build-${{ hashFiles('**/Cargo.lock', 'rust-toolchain.toml') }}-${{ env.RUST_STABLE }}

      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --all-targets -- --deny=warnings

      - name: Build
        run: ./ci/cargo-build-test.sh
