permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    paths:
      - '.github/workflows/release.yml'
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
    runs-on: ["${{ matrix.os }}"]
    steps:
      - uses: actions/checkout@v4

      - name: Set env vars
        run: |
          rust_stable=$(rustc --version | awk '{print $2}')
          echo "RUST_STABLE=$rust_stable" | tee -a $GITHUB_ENV

      - name: instal dependencies for 20.04
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gnupg \
            libudev-dev \
            libsasl2-dev \
            libssl-dev \
            libzstd-dev

      - name: install protobuff 3.12
        if: matrix.os == 'ubuntu-20.04'
        run: |
          curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v3.15.8/protoc-3.15.8-linux-x86_64.zip
          unzip protoc-3.15.8-linux-x86_64.zip -d $HOME/.local
          export PATH="$PATH:$HOME/.local/bin"

      - name: Install dependencies for 22.04
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gnupg \
            libudev-dev \
            libsasl2-dev \
            libssl-dev \
            libzstd-dev \
            protobuf-compiler

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_STABLE }}
          components: clippy

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./target
          key: cargo-${{ matrix.os }}-${{ hashFiles('rust-toolchain.toml') }}-${{ hashFiles('**/Cargo.lock') }}-0000
          restore-keys: |
            cargo-${{ matrix.os }}-${{ hashFiles('rust-toolchain.toml') }}

      - name: Check Solana version
        run: |
          echo "CI_TAG=${GITHUB_REF#refs/*/}" >> "$GITHUB_ENV"
          echo "CI_OS_NAME=linux" >> "$GITHUB_ENV"

          SOLANA_VERSION="$(./ci/solana-version.sh)"
          SOLANA_VERSION="v${SOLANA_VERSION#=}"
          echo "SOLANA_VERSION=$SOLANA_VERSION" >> "$GITHUB_ENV"

      - name: Build release tarball
        run: ./ci/create-tarball.sh

      - name: Rename binaries for ubuntu22 release
        if: matrix.os == 'ubuntu-22.04'
        run: |
          mv solana-accountsdb-plugin-kafka-release-x86_64-unknown-linux-gnu.tar.bz2 solana-accountsdb-plugin-kafka-release22-x86_64-unknown-linux-gnu.tar.bz2
          mv solana-accountsdb-plugin-kafka-release-x86_64-unknown-linux-gnu.yml solana-accountsdb-plugin-kafka-release22-x86_64-unknown-linux-gnu.yml

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: |
            solana-accountsdb-plugin-kafka ${{ env.CI_TAG }}
            solana ${{ env.SOLANA_VERSION }}
            rust ${{ env.RUST_STABLE }}
          files: |
            solana-accountsdb-plugin-kafka-release*
